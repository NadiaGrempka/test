name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-pipeline

jobs:

  test:
    name: Unit tests and integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kodu
        uses: actions/checkout@v3

      - name: Ustaw Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalacja zależności
        run: npm ci

      - name: Uruchom testy
        run: npm test

  build:
    name: Przygotowanie artefaktów
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kodu
        uses: actions/checkout@v3

      - name: Ustaw Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalacja zależności
        run: npm ci

      - name: Prune dev dependencies
        run: npm prune --production

      - name: (opcjonalnie) kompresja artefaktów
        run: |
          mkdir -p dist
          cp -r app.js package*.json dist/
          cp -r node_modules dist/

  docker:
    name: Build i push na Docker Hub
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kodu
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Zaloguj do Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Zbuduj i wypchnij obraz
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
